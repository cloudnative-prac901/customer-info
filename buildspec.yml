version: 0.2

env:
  variables:
    ECR_REPO: "customer-info/app"
  git-credential-helper: no

phases:
  # pre_build（ECRログイン、タグ生成などを実施）
  pre_build:
      - set -e
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION="${AWS_DEFAULT_REGION:-ap-northeast-2}"
      - echo "[pre_build] login to ECR ${ACCOUNT_ID}/${REGION}"
      - aws ecr get-login-password --region "$REGION" \
        | docker login --username AWS --password-stdin "${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com"

      # タグ生成（shortsha を使わない）
      - TS=$(date +%Y%m%d%H%M%S)
      - BRANCH=main    # main以外で動かない設計とするため固定値
      - IMAGE_TAG="${BRANCH}-${TS}-b${CODEBUILD_BUILD_NUMBER:-0}"
      - : "${ECR_REPO:?ECR_REPO is empty}"
      - IMAGE_URI="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/${ECR_REPO}:${IMAGE_TAG}"
      - echo “IMAGE_URI=${IMAGE_URI}“

  # build（docker buildなど）
  build:
    commands:
      - set -e
      - CTX="${BUILD_CONTEXT:-.}"
      - DF="${DOCKERFILE_PATH:-${CTX}/Dockerfile}"
      - test -f "${DF}" || { echo "Dockerfile not found: ${DF}"; exit 1; }
      - echo "[build] docker build ${DF} -> ${IMAGE_URI}"
      - docker build --pull -f "${DF}" -t "${IMAGE_URI}" "${CTX}"

  # post_build（ECRプッシュ、imageDetail.jsonの出力）
  post_build:
    commands:
      - set -e
      - echo "[post_build] push ${IMAGE_URI}"
      - docker push "${IMAGE_URI}"

      # CodeDeploy(ECS Blue/Green) 用の imageDetail.json を出力
      - printf '{"ImageURI":"%s"}\n' "${IMAGE_URI}" > imageDetail.json
      - echo "[done] IMAGE_URI=${IMAGE_URI}"

# artifactsの生成
artifacts:
  files:
    - imageDetail.json
  discard-paths: yes
